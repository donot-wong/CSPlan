#include helpers.inc;
#include string_helpers.inc;
#include os_detection.inc;
#include static_files_extensions.inc;
// files to be tested
var files = new Array();
var lastJob = null;
var vulnCount = 0;
// **************************************************************************************							 
function alert(uri, vxml, job, matchedText)
{	
	var ri = new TReportItem();
	ri.LoadFromFile(vxml);
	ri.affects = uri;
	ri.alertPath = "Scripts/" + vxml; 	
	ri.setHttpInfo(job);
	addHTTPJobToCrawler(job, 1, 1);
	
	AddReportItem(ri);	
}							 			
function testURI(uri)
{
	lastJob = new THTTPJob();
	lastJob.verb = "GET";
	lastJob.url  = scanURL;	
	lastJob.uri  = uri + "?debug=command&expression=%23_memberAccess[\"allowStaticMethodAccess\"]=true,@java.lang.Runtime@getRuntime()";		
	lastJob.execute();
	
	if (!lastJob.wasError && !lastJob.notFound && lastJob.response.body.indexOf("java.lang.Runtime@")==0) return true;
	else return 0;
}
function testURI_S2016(uri)
{
	lastJob = new THTTPJob();
	lastJob.verb = "GET";
	lastJob.url  = scanURL;	
	lastJob.uri  = uri + "?redirect:%25{333*444}";
	lastJob.execute();
	
	if (!lastJob.wasError && !lastJob.notFound && lastJob.response.msg2 == 302) {
		var location = lastJob.response.headerValue('location');
		if (location && location.indexOf("147852")!=-1) {			
			return true;
		}
	}
	
	return 0;
}
function testURI_S2016_v2(uri)
{
	lastJob = new THTTPJob();
	lastJob.verb = "GET";
	lastJob.url  = scanURL;	
	lastJob.uri  = uri + "?redirectAction:http://www.vulnweb.com/";
	lastJob.execute();
	
	if (!lastJob.wasError && !lastJob.notFound && lastJob.response.msg2 == 302) {
		var location = lastJob.response.headerValue('location');
		if (location && location.indexOf("http://www.vulnweb.com/.action")!=-1) {			
			return true;
		}
	}
	
	return 0;
}
/***********************************************************************************/
function testVulnOnFile(file)
{	
	if (testURI(file))
	{
		alert(file, 'Struts2_Remote_Code_Execution.xml', lastJob);
		vulnCount = vulnCount + 1;
	}
	if (testURI_S2016(file))
	{
		alert(file, 'Struts2_Remote_Code_Execution_S2016.xml', lastJob);
		vulnCount = vulnCount + 1;
	}
	// test a variant of S2016 with redirectAction
	if (testURI_S2016_v2(file))
	{
		alert(file, 'Struts2_Remote_Code_Execution_S2016.xml', lastJob);
		vulnCount = vulnCount + 1;
	}		
}
/***********************************************************************************/
function prepareFilesToBeTested(list)
{	
	for (var i=0;i<list.count; i++){	
		var sf = list.getFile(i);		
		
		if(!sf.notFound && !sf.ignored && sf.scanSiteFile && sf.isFile)
		{
			if (sf.Name.endsWith(".action") || sf.Name.endsWith(".do") || sf.Name.endsWith(".page")) 
			{
				if (files.length < 50)
					files.push(sf.fullPath);
			}					
		}	
	}	
	
	// if no .action and so on files were found, add the first non-static files if Java was detected.
	if (files.length < 50 && isJava) {
		for (var i=0;i<list.count; i++){	
			var sf = list.getFile(i);		
			
			if(!sf.notFound && !sf.ignored && sf.scanSiteFile && sf.isFile)
			{
				if (!isStaticExtension(getFileExt(sf.name)))
				{
					if (files.length < 50)
						files.push(sf.fullPath);
				}					
			}	
		}		
	}
}
/***********************************************************************************/
/* main entry point */
var list = getNewFiles(0);
prepareFilesToBeTested(list);
if (files.length > 0) 
{
	for (var i=0; i<files.length; i++)
	{
	  // don't test on all files (stop after 2 vulnerable action files).
		if (vulnCount < 2)
			testVulnOnFile(files[i]);
	}
}
