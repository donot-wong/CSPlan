<?xml version="1.0" standalone="no"?>
<WebApplicationTest>
	<TestDescription name="Partial user controllable script source" version="0.1" released="20060711" updated="20140320" protocol="HTTP" mayproxy="true" affects="file" severity="medium" alert="success" type="Validation">
		<WASPDescription BindAlertToFile="0" CrawlerProcessingMode="ParseOnly" TargetFormat="" Target="" ModuleName="" Request="" Response="" FullResponse="" DetailsFormat="" Details="" AuthType="0" AuthName="" AuthPass="" CompInfo="" FolowRedirection="false" DetaliedInformation="" SendCookies="true" AlertTags="abuse_of_functionality" HasPrecondition="false" SendAuth="true" ValidateSession="true" CVE="" CWE="CWE-20" CVSSVer="2.0" CVSSScore="4.4" CVSSDescr="AV:N/AC:M/Au:N/C:N/I:P/A:N" CVSSScoreTemp="" CVSSScoreEnv=""/>
		<Copyright/>
		<Description>The [bold]src[/bold] parameter for one [bold]script[/bold] tag from this page is partially controlled by user input. This behavior can potentially lead to various security issues, in some cases it could be possible to conduct [bold]Reverse Clickjacking[/bold] attacks.</Description>
		<ApplicableTo>
			<Platform>
				<OS>All</OS>
				<Arch>i386</Arch>
			</Platform>
			<WebServer>All</WebServer>
			<ApplicationServer>All</ApplicationServer>
		</ApplicableTo>
		<TriggerOn event="scheme_host_port">
			<Match type="regex">.*</Match>
		</TriggerOn>
		<Impact>An attacker can partially control the script source query parameters and inject additional parameters into the script source URL.</Impact>
		<Recommendation>Your script should properly sanitize user input. The user input should be properly escaped before being  used to construct the script URL.</Recommendation>
		<Reference database="Reverse Clickjacking" URL="https://plus.google.com/+AleksandrDobkin-Google/posts/JMwA7Y3RYzV"/></TestDescription>
	<Connection scheme="${scheme}" host="${host}" port="${port}">
		<Step name="testfile">
			<Request>
				<MessageHeader>
					<Method>GET</Method>
					<URI>${scheme}://${host}:${port}${path}</URI>
					<Version>HTTP/1.0</Version>
				</MessageHeader>
				<MessageBody>
					<Separator/>
					<Item encoding="text">${post}</Item>
				</MessageBody>
			</Request>
			<Response>
				<SetVariable name="ResponseCode" type="string">
					<Description>The HTTP Response Code</Description>
					<Source source="status">^.*\s(\d\d\d)\s</Source>
				</SetVariable>
				<SetVariable name="CheckForRedirection" type="string">
					<Description>Check for redirection</Description>
					<Source source="header">(?i)\n(Location\s*:\s*http://www.acunetix.com)</Source>
				</SetVariable>
				<SetVariable name="HtmlParser" type="htmlparser">
					<Description>htmlparser</Description>
					<Source source="body">^(.*)$</Source>
				</SetVariable>
			</Response>
			<TestCriteria type="success">
				<Compare variable="${CheckForRedirection}" test="neq">
					<Value/>
					<Compare variable="${IsCustom404}" test="eq">
						<Value>false</Value>
						<Compare variable="${ResponseCode}" test="eq">
							<Value>302</Value>
						</Compare>
						<Compare variable="${ResponseCode}" test="eq">
							<Value>301</Value>
						</Compare>
					</Compare>
				</Compare>
			</TestCriteria>
			<TestCriteria type="failure">
				<Compare variable="${ResponseCode}" test="eq">
					<Value>404</Value>
				</Compare>
			</TestCriteria>
			<TestCriteria type="success">
				<Compare variable="${HtmlParser}" test="cont">
					<Value>tag=meta;http-equiv=refresh;content&lt;url\=http://www.acunetix.com</Value>
					<Compare variable="${IsCustom404}" test="eq">
						<Value>false</Value>
						<Compare variable="${ResponseCode}" test="eq">
							<Value>200</Value>
						</Compare>
					</Compare>
				</Compare>
			</TestCriteria>
		</Step>
	</Connection>
	<Variable name="file" type="string">
		<Description>Site file to be tested</Description>
		<Item encoding="Text">test</Item>
	</Variable>
	<Variable name="test" type="string">
		<Description>A list of values for all SQL Injection tests to be performed</Description>
		<Item encoding="Text">test</Item>
	</Variable>
	<Variable name="combinations" type="string">
		<Description>List of parameter combinations</Description>
		<Item encoding="Text">test</Item>
	</Variable>
	<Variable name="path" type="string">
		<Description>List of combinations for this test</Description>
		<Item encoding="Text">${file}${combinations}</Item>
	</Variable>
	<Variable name="post" type="string">
		<Description>Values for POST</Description>
		<Item encoding="Text">test</Item>
	</Variable>
	<Variable name="filename" type="string">
		<Description>Site filename</Description>
		<Item encoding="Text">test</Item>
	</Variable>
	<Variable name="cookie" type="string">
		<Description>Cookie combinations</Description>
		<Item encoding="Text">test</Item>
	</Variable>
	<Variable name="headers" type="string">
		<Description>List of header combinations</Description>
		<Item encoding="Text">test</Item>
	</Variable>
</WebApplicationTest>
