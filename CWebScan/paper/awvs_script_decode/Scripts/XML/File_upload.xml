<?xml version="1.0" encoding="utf-8"?>
<WebApplicationTest>
	<TestDescription name="Unrestricted file upload" version="0.1" released="20090304" updated="20140307" protocol="HTTP" mayproxy="true" affects="file" severity="high" alert="success" type="Validation">
		<WASPDescription BindAlertToFile="0" CrawlerProcessingMode="ParseOnly" TargetFormat="" Target="" ModuleName="" Request="" Response="" FullResponse="" DetailsFormat="" Details="" AuthType="0" AuthName="" AuthPass="" CompInfo="" DetaliedInformation="" FolowRedirection="false" HasPrecondition="false" AlertTags="abuse_of_functionality,arbitrary_file_creation,unauthenticated_file_upload" SendCookies="false" SendAuth="true" ValidateSession="true" CVE="" CWE="CWE-434" CVSSVer="2.0" CVSSScore="7.5" CVSSDescr="AV:N/AC:L/Au:N/C:P/I:P/A:P" CVSSScoreTemp="7.5" CVSSScoreEnv="7.5" CVSS3Descr="CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"></WASPDescription>
		<Copyright></Copyright>
		<Description>This script is possibly vulnerable to unrestricted file upload. Various web applications allow users to upload files (such as pictures, images, sounds, ...). Uploaded files may pose a significant risk if not handled correctly. A remote attacker could send a multipart/form-data POST request with a specially-crafted filename or mime type and execute arbitrary code. Acunetix WVS was able to upload a file containing executable code and get this code executed. Check [bold]Attack details[/bold] for more information about this attack.</Description>
		<ApplicableTo>
			<Platform>
				<OS>All</OS>
				<Arch>i386</Arch>
			</Platform>
			<WebServer>All</WebServer>
			<ApplicationServer>All</ApplicationServer>
		</ApplicableTo>
		<TriggerOn event="scheme_host_port">
			<Match type="regex">.*</Match>
		</TriggerOn>
		<Impact>It may be possible for an attacker to use this vulnerability to execute arbitrary code.</Impact>
		<Recommendation>Restrict file types accepted for upload: check the file extension and only allow certain files to be uploaded. Use a whitelist approach instead of a blacklist. Check for double extensions such as .php.png. Check for files without a filename like .htaccess (on ASP.NET, check for configuration files like web.config). Change the permissions on the upload folder so the files within it are not executable. If possible, rename the files that are uploaded.</Recommendation>
		<Reference database="OWASP Unrestricted File Upload" URL="http://www.owasp.org/index.php/Unrestricted_File_Upload"></Reference>
		<Reference database="Why File Upload Forms are a major security threat" URL="http://www.acunetix.com/websitesecurity/upload-forms-threat.htm"></Reference>
	</TestDescription>
	<Connection scheme="${scheme}" host="${host}" port="${port}">
		<Step name="testfile">
			<Request>
				<MessageHeader>
					<Method>POST</Method>
					<URI>${scheme}://${host}:${port}${path}</URI>
					<Version>HTTP/1.0</Version>
				</MessageHeader>
				<MessageBody>
					<Separator></Separator>
					<Item encoding="text"></Item>
				</MessageBody>
			</Request>
			<Response>
				<SetVariable name="ResponseCode" type="string">
					<Description>The HTTP Response Code</Description>
					<Source source="status">^.*\s(\d\d\d)\s</Source>
				</SetVariable>
				<SetVariable name="AspectDataQuery" type="aspectdata">
					<Description>Query AcuSensor Data</Description>
					<Source source="body">^(.*)$</Source>
				</SetVariable>
			</Response>
			<TestCriteria type="success">
				<Compare variable="${ResponseCode}" test="neq">
					<Value>404</Value>
				</Compare>
			</TestCriteria>
		</Step>
		<Step name="testfile">
			<Request>
				<MessageHeader>
					<Method>GET</Method>
					<URI>${scheme}://${host}:${port}${path2}</URI>
					<Version>HTTP/1.0</Version>
				</MessageHeader>
				<MessageBody>
					<Separator></Separator>
					<Item encoding="text"></Item>
				</MessageBody>
			</Request>
			<Response>
				<SetVariable name="ResponseCode" type="string">
					<Description>The HTTP Response Code</Description>
					<Source source="status">^.*\s(\d\d\d)\s</Source>
				</SetVariable>
				<SetVariable name="FullBody" type="string">
					<Description>Response body</Description>
					<Source source="body">^(.*)$</Source>
				</SetVariable>
			</Response>
			<TestCriteria type="success">
				<Compare variable="${FullBody}" test="cont">
					<Value>4d02070effdd7e319ca561bc66617a8a</Value>
				</Compare>
				<Compare variable="${FullBody}" test="cont">
					<Value>#Acunetix .htaccess File Upload test</Value>
					<Compare variable="${file}" test="cont">
						<Value>.htaccess</Value>
						<Compare variable="${file}" test="cont">
							<Value>AcuTest</Value>
						</Compare>
					</Compare>
				</Compare>
			</TestCriteria>
		</Step>
	</Connection>
	<Variable name="path" type="string">
		<Description>script path</Description>
		<Item encoding="Text">test</Item>
	</Variable>
	<Variable name="file" type="string">
		<Description>filename</Description>
		<Item encoding="Text">test</Item>
	</Variable>
	<Variable name="partialPath" type="string">
		<Description>partial script path</Description>
		<Item encoding="Text">test</Item>
	</Variable>
	<Variable name="path2" type="string">
		<Description>partial script path</Description>
		<Item encoding="Text">${partialPath}${test}</Item>
	</Variable>
	<Variable name="test" type="string">
		<Description>the tests</Description>
		<Item encoding="Text">combinations</Item>
	</Variable>
</WebApplicationTest>