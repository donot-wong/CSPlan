<?xml version="1.0" encoding="utf-8"?>
<WebApplicationTest>
	<TestDescription name="ColdFusion 8 FCKEditor file upload vulnerability" version="0.1" released="20090714" updated="20140310" protocol="HTTP" mayproxy="true" affects="file" severity="high" alert="success" type="Validation">
		<WASPDescription BindAlertToFile="0" CrawlerProcessingMode="ParseOnly" TargetFormat="${file}" Target="" ModuleName="" Request="" Response="" FullResponse="" DetailsFormat="" Details="" AuthType="0" AuthName="" AuthPass="" CompInfo="" DetaliedInformation="" FolowRedirection="false" HasPrecondition="false" AlertTags="arbitrary_file_creation,missing_update,unauthenticated_file_upload" SendCookies="false" SendAuth="true" ValidateSession="false" CVE="CVE-2009-2265" CWE="CWE-22" CVSSVer="2.0" CVSSScore="7.5" CVSSDescr="AV:N/AC:L/Au:N/C:P/I:P/A:P/E:F/RL:OF/RC:C" CVSSScoreTemp="6.2" CVSSScoreEnv="6.3" CVSS3Descr="CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"></WASPDescription>
		<Reference database="CF8 and FCKEditor Security threat" URL="http://www.codfusion.com/blog/post.cfm/cf8-and-fckeditor-security-threat"></Reference>
		<Copyright></Copyright>
		<Description>ColdFusion version 8.0.1 installs a vulnerable version of FCKEditor which is enabled by default. FCKEditor includes functionality to handle file uploads and file management, allowing an attacker to upload and execute malicious code.</Description>
		<ApplicableTo>
			<Platform>
				<OS>All</OS>
				<Arch>i386</Arch>
			</Platform>
			<WebServer>All</WebServer>
			<ApplicationServer>All</ApplicationServer>
		</ApplicableTo>
		<TriggerOn event="scheme_host_port">
			<Match type="regex">.*</Match>
		</TriggerOn>
		<Impact>An attacker can upload and execute malicious code, taking control of the server.</Impact>
		<Recommendation>One fix is to edit the [bold][dark]config.cfm[/dark][/bold] file at [bold][dark]\CFIDE\scripts\ajax\FCKeditor\editor\filemanager\connectors\cfm[/dark][/bold] to disable uploads (consult [bold]CF8 and FCKEditor Security threat[/bold]) .[break] Also, Adobe released a security patch for this issue and is a very high level patch that should be applied to your servers (consult [bold]Hotfix available for potential ColdFusion 8 input sanitization issue[/bold]).</Recommendation>
	</TestDescription>
	<Connection scheme="${scheme}" host="${host}" port="${port}">
		<Step name="first">
			<Request>
				<MessageHeader>
					<Method>POST</Method>
					<URI>${scheme}://${host}:${port}${file}?Command=FileUpload&amp;Type=File&amp;CurrentFolder=%2F</URI>
					<Version>HTTP/1.0</Version>
					<Header>
						<Name encoding="text">Content-Type</Name>
						<Value encoding="text">multipart/form-data; boundary=---------------------------29565348729577</Value>
					</Header>
					<Header>
						<Name encoding="text">Content-Length</Name>
						<Value encoding="text">236</Value>
					</Header>
				</MessageHeader>
				<MessageBody>
					<Separator>\x0d\x0a</Separator>
					<Item encoding="text">-----------------------------29565348729577</Item>
					<Item encoding="text">Content-Disposition: form-data; name="NewFile"; filename="Acunetix_WVS_File_Upload_test.txt"</Item>
					<Item encoding="text">Content-Type: text/plain</Item>
					<Item encoding="text"></Item>
					<Item encoding="text">Testing file upload.</Item>
					<Item encoding="text">-----------------------------29565348729577--</Item>
				</MessageBody>
			</Request>
			<Response>
				<SetVariable name="ResponseCode" type="string">
					<Description>The HTTP Response Code</Description>
					<Source source="status">^.*\s(\d\d\d)\s</Source>
				</SetVariable>
				<SetVariable name="FullBody" type="string">
					<Description>The HTTP Response Code</Description>
					<Source source="body">^(.*)$</Source>
				</SetVariable>
				<SetVariable name="redir302" type="string">
					<Description>Check to see if we are being redirected to another page</Description>
					<Source source="header">^Location: (.*)$</Source>
				</SetVariable>
			</Response>
			<TestCriteria type="success">
				<Compare variable="${ResponseCode}" test="eq">
					<Value>200</Value>
					<Compare variable="${IsCustom404}" test="eq">
						<Value>false</Value>
						<Compare variable="${FullBody}" test="cont">
							<Value>OnUploadCompleted</Value>
							<Compare variable="${FullBody}" test="cont">
								<Value>Acunetix_WVS_File_Upload_test</Value>
							</Compare>
						</Compare>
					</Compare>
				</Compare>
			</TestCriteria>
			<TestCriteria type="failure">
				<Compare variable="${ResponseCode}" test="eq">
					<Value>404</Value>
				</Compare>
			</TestCriteria>
			<TestCriteria type="failure">
				<Compare variable="${ResponseCode}" test="eq">
					<Value>302</Value>
				</Compare>
			</TestCriteria>
			<TestCriteria type="failure">
				<Compare variable="${ResponseCode}" test="neq">
					<Value>200</Value>
				</Compare>
			</TestCriteria>
		</Step>
	</Connection>
	<Variable name="file" type="string">
		<Description>Affected site file</Description>
		<Item encoding="Text">test</Item>
	</Variable>
</WebApplicationTest>