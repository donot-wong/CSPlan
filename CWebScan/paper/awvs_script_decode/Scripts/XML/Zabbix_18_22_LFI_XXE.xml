<?xml version="1.0" encoding="utf-8"?>
<WebApplicationTest>
	<TestDescription name="Zabbix 1.8.x-2.2.x Local File Inclusion via XXE Attack" version="0.1" released="20040327" updated="20140804" protocol="HTTP" mayproxy="true" affects="file" severity="high" alert="success" type="Validation">
		<WASPDescription BindAlertToFile="0" CrawlerProcessingMode="ParseOnly" TargetFormat="${file}" Target="" ModuleName="Backup files" Request="" Response="" FullResponse="" DetailsFormat="The script has been tested with these parameter values : ${combinations}" Details="" AuthType="0" AuthName="" AuthPass="" CompInfo="" FolowRedirection="false" DetaliedInformation="" SendCookies="true" AlertTags="file_inclusion,xxe" HasPrecondition="true" SendAuth="true" ValidateSession="false" CVE="" CWE="CWE-611" CVSSVer="2.0" CVSSScore="6.4" CVSSDescr="AV:N/AC:L/Au:N/C:P/I:P/A:N" CVSSScoreTemp="6.5" CVSSScoreEnv="6.5" CVSS3Descr="CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H"></WASPDescription>
		<Reference database="Zabbix 1.8.x-2.2.x Local File Inclusion via XXE Attack" URL="https://support.zabbix.com/browse/ZBX-8151"></Reference>
		<Copyright></Copyright>
		<Description>Zabbix frontend supported an XML data import feature, where on the server it used DOMDocument to parse the XML.  By default, DOMDocument also parses the external DTD, which could allow a remote attacker to use a crafted XML file causing Zabbix to read an arbitrary local file, and send the contents of the specified file to a remote server. [break][break]
Affected versions: 1.8.19, 1.8.20, 2.0.9, 2.0.10, 2.0.11rc2, 2.0.11, 2.2.2, 2.2.3rc1, 2.2.3rc2, 2.2.3</Description>
		<ApplicableTo>
			<Platform>
				<OS>All</OS>
				<Arch>i386</Arch>
			</Platform>
			<WebServer>All</WebServer>
			<ApplicationServer>All</ApplicationServer>
		</ApplicableTo>
		<TriggerOn event="scheme_host_port">
			<Match type="regex">.*</Match>
		</TriggerOn>
		<Impact>An attacker can read arbitrary local files from the affected server.</Impact>
		<Recommendation>Upgrade to the latest version of Zabbix (this issue was fixed in version 2.3.2).</Recommendation>
	</TestDescription>
	<Connection scheme="${scheme}" host="${host}" port="${port}">
		<Step name="testfile">
			<Request>
				<MessageHeader>
					<Method>GET</Method>
					<URI>${scheme}://${host}:${port}${path}</URI>
					<Version>HTTP/1.0</Version>
				</MessageHeader>
				<MessageBody>
					<Separator></Separator>
				</MessageBody>
			</Request>
			<Response>
				<SetVariable name="ResponseCode" type="string">
					<Description>The HTTP Response Code</Description>
					<Source source="status">^.*\s(\d\d\d)\s</Source>
				</SetVariable>
				<SetVariable name="FullBody" type="string">
					<Description>The HTTP Response Code</Description>
					<Source source="body">^(.*)$</Source>
				</SetVariable>
				<SetVariable name="redir302" type="string">
					<Description>Check to see if we are being redirected to another page</Description>
					<Source source="header">^Location: (.*)$</Source>
				</SetVariable>
			</Response>
			<TestCriteria type="success">
				<Compare variable="${ResponseCode}" test="eq">
					<Value>200</Value>
					<Compare variable="${IsCustom404}" test="eq">
						<Value>false</Value>
					</Compare>
				</Compare>
			</TestCriteria>
			<TestCriteria type="failure">
				<ErrorMessage>This message indicates a failure to properly execute the test, or an unhandled HTTP response. Please investigate further, and modify this test before re-executing it. The server returned ${ResponseCode}</ErrorMessage>
				<Compare variable="${ResponseCode}" test="neq">
					<Value>200</Value>
				</Compare>
			</TestCriteria>
			<TestCriteria type="precondition">
				<Compare variable="${ResponseCode}" test="neq">
					<Value>200</Value>
				</Compare>
				<Compare variable="${IsCustom404}" test="eq">
					<Value>true</Value>
				</Compare>
			</TestCriteria>
		</Step>
	</Connection>
	<Variable name="file" type="string">
		<Description>Site file to be tested</Description>
		<Item encoding="Text">test</Item>
	</Variable>
	<Variable name="test" type="string">
		<Description>A list of tests to be performed</Description>
		<Item encoding="Text">test</Item>
	</Variable>
	<Variable name="path" type="string">
		<Description>List of complete tests</Description>
		<Item encoding="Text">${file}${test}</Item>
	</Variable>
</WebApplicationTest>