<?xml version="1.0" standalone="no"?>
<WebApplicationTest>
	<TestDescription name="CodeIgniter session decoding vulnerability" version="0.1" released="20080307" updated="20150217" protocol="FTP" mayproxy="false" affects="server" severity="high" alert="success" type="Configuration">
		<WASPDescription BindAlertToFile="0" CrawlerProcessingMode="ParseOnly" TargetFormat="" Target="" ModuleName="" Request="" Response="" FullResponse="" DetailsFormat="" Details="" AuthType="0" AuthName="" AuthPass="" CompInfo="" DetaliedInformation="" AlertTags="configuration" CVE="" CWE="CWE-16" CVSSVer="2.0" CVSSScore="0.0" CVSSDescr="AV:N/AC:L/Au:N/C:N/I:N/A:N" CVSSScoreTemp="0.0" CVSSScoreEnv="0.0"/>
		<Copyright></Copyright>
		<Description>A vulnerability was discovered in the CodeIgniter session handling code. This issue was reported to EllisLab and a fixed version (2.2.0) was released on 5th June 2014, which removed the _xor_encode() method and required the use of Mcrypt. </Description>
		<ApplicableTo>
			<Platform>
				<OS>*</OS>
				<Arch>*</Arch>
			</Platform>
			<WebServer>*</WebServer>
			<ApplicationServer>*</ApplicationServer>
		</ApplicableTo>
		<Impact>An attacker who can exploit this vulnerability can potentially bypass the IP/user-agent restriction, perform object injection attacks and write arbitrary session variables.</Impact>
		<Recommendation>Upgrade to the latest version of CodeIgniter. This problem was fixed in CodeIgniter version 2.2.0.</Recommendation>
		<Reference database="CodeIgniter Session Decoding Vulnerability" URL="https://www.dionach.com/blog/codeigniter-session-decoding-vulnerability"/><Reference database="CodeIgniter 2.2.0 Released" URL="https://ellislab.com/blog/entry/codeigniter-2.2.0-released"/></TestDescription>
</WebApplicationTest>
