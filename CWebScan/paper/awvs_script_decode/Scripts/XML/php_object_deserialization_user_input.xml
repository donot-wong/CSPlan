<?xml version="1.0" standalone="no"?>
<WebApplicationTest>
	<TestDescription name="PHP object deserialization of user-supplied data" version="0.1" released="20080307" updated="20151112" protocol="FTP" mayproxy="false" affects="server" severity="medium" alert="success" type="Configuration">
		<WASPDescription BindAlertToFile="0" CrawlerProcessingMode="ParseOnly" TargetFormat="" Target="" ModuleName="" Request="" Response="" FullResponse="" DetailsFormat="" Details="" AuthType="0" AuthName="" AuthPass="" CompInfo="" DetaliedInformation="" AlertTags="abuse_of_functionality" CVE="" CWE="CWE-20" CVSSVer="2.0" CVSSScore="0.0" CVSSDescr="AV:N/AC:L/Au:N/C:N/I:N/A:N" CVSSScoreTemp="" CVSSScoreEnv=""/>
		<Copyright></Copyright>
		<Description>It was determined that your web application is performing PHP object deserialization of user-supplied data. Arbitrary object deserialization is inherently unsafe, and should never be performed on untrusted data. Consult Web references section for more information about this issue.</Description>
		<ApplicableTo>
			<Platform>
				<OS>*</OS>
				<Arch>*</Arch>
			</Platform>
			<WebServer>*</WebServer>
			<ApplicationServer>*</ApplicationServer>
		</ApplicableTo>
		<Impact>Web applications that accept untrusted data to deserialize could allow an attacker to perform different kinds of malicious attacks, such as Code Injection, SQL Injection, Path Traversal and Application Denial of Service, depending on the context.</Impact>
		<Recommendation>PHP object deserialization should not be performed on user-supplied data. Do not use the unserialize() function with user-supplied input, use JSON functions instead.</Recommendation>
		<Reference database="PHP Object Injection" URL="https://www.owasp.org/index.php/PHP_Object_Injection"/></TestDescription>
</WebApplicationTest>
