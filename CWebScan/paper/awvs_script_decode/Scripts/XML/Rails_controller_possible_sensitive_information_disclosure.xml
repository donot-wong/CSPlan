<?xml version="1.0" encoding="utf-8"?>
<WebApplicationTest>
	<TestDescription name="Rails controller possible sensitive information disclosure" version="0.1" released="20080307" updated="20150529" protocol="FTP" mayproxy="false" affects="server" severity="medium" alert="success" type="Configuration">
		<WASPDescription BindAlertToFile="0" CrawlerProcessingMode="ParseOnly" TargetFormat="" Target="" ModuleName="" Request="" Response="" FullResponse="" DetailsFormat="" Details="" AuthType="0" AuthName="" AuthPass="" CompInfo="" DetaliedInformation="" AlertTags="information_disclosure" CVE="" CWE="CWE-200" CVSSVer="2.0" CVSSScore="0.0" CVSSDescr="AV:N/AC:L/Au:N/C:N/I:N/A:N" CVSSScoreTemp="0.0" CVSSScoreEnv="0.0" CVSS3Descr="CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"></WASPDescription>
		<Copyright></Copyright>
		<Description>[coolbox][dark]Manual confirmation is required for this alert.[/dark][/coolbox][break]
Rails scaffolding is a quick way to generate some of the major pieces of a Rails application. When scaffolding is used, Rails will create automatically the models, views, and controllers for a new resource in a single operation. Output formats are handled in the controller automatically. JSON and XML are natively supported by Rails. Sometimes developers use scaffolding but don't properly restrict access to all the APIs generated automatically by Rails. In this case, sensitive information is leaked via the autogenerated APIs. Acunetix WVS found an API that possibly leaks sensitive information.</Description>
		<ApplicableTo>
			<Platform>
				<OS>*</OS>
				<Arch>*</Arch>
			</Platform>
			<WebServer>*</WebServer>
			<ApplicationServer>*</ApplicationServer>
		</ApplicableTo>
		<Impact>Possible sensitive information disclosure.</Impact>
		<Recommendation>Acunetix WVS cannot confirm this is a real vulnerability. Manual confirmation is required for this alert. 
Make sure the information disclosed in the HTTP response does not contain any sensitive information. If it does, adjust the Rails controller code to prevent this information from leaking.</Recommendation>
		<Reference database="Ruby on Rails Security Guide" URL="http://guides.rubyonrails.org/security.html"></Reference>
	</TestDescription>
</WebApplicationTest>