<?xml version="1.0" standalone="no"?>
<WebApplicationTest>
	<TestDescription name="GlassFish admin console weak credentials" version="0.1" released="20071212" updated="20140306" protocol="HTTP" mayproxy="true" affects="file" severity="high" alert="success" type="Informational">
		<WASPDescription BindAlertToFile="0" CrawlerProcessingMode="ParseOnly" TargetFormat="" Target="" ModuleName="" Request="" Response="" FullResponse="" DetailsFormat="" Details="" AuthType="0" AuthName="" AuthPass="" CompInfo="" DetaliedInformation="" FolowRedirection="false" HasPrecondition="true" AlertTags="information_disclosure,configuration,weak_credentials" SendCookies="false" SendAuth="true" ValidateSession="false" CVE="" CWE="CWE-16" CVSSVer="2.0" CVSSScore="7.5" CVSSDescr="AV:N/AC:L/Au:N/C:P/I:P/A:P" CVSSScoreTemp="7.5" CVSSScoreEnv="7.5"/>
		<Reference database="Wikipedia - Password strength" URL="http://en.wikipedia.org/wiki/Password_strength"/>
		<Copyright/>
		<Description>The GlassFish Admin Console is protected with weak or default credentials. Acunetix WVS was able to guess the username and password required to access this page. A weak password is short, common, a system default, or something that could be rapidly guessed by executing a brute force attack using a subset of all possible passwords, such as words in the dictionary, proper names, words based on the user name or common variations on these themes.</Description>
		<ApplicableTo>
			<Platform>
				<OS>All</OS>
				<Arch>i386</Arch></Platform>
			<WebServer>All</WebServer><ApplicationServer>All</ApplicationServer></ApplicableTo>
		<TriggerOn event="scheme_host_port">
			<Match type="regex">.*</Match>
		</TriggerOn>
		<Impact>An attacker may access the contents of the password-protected page.</Impact>
		<Recommendation>Enforce a strong password policy. Don't permit weak passwords or passwords based on dictionary words.</Recommendation>
		<Reference database="Authentication Hacking Attacks" URL="http://www.acunetix.com/websitesecurity/authentication.htm"/></TestDescription>
	<Connection scheme="${scheme}" host="${host}" port="${port}">
		<Step name="testfile">
			<Request>
				<MessageHeader>
					<Method>GET</Method>
					<URI>${scheme}://${host}:${port}${path}</URI>
					<Version>HTTP/1.0</Version>
				</MessageHeader>
				<MessageBody>
					<Separator></Separator>
					<Item encoding="text"></Item></MessageBody>
			</Request>
			<Response>
				<SetVariable name="ResponseCode" type="string">
					<Description>The HTTP Response Code</Description>
					<Source source="status">^.*\s(\d\d\d)\s</Source>
				</SetVariable>
			</Response>
			<TestCriteria type="success">
				<Compare variable="${ResponseCode}" test="eq">
					<Value>200</Value>
				</Compare>
				<Compare variable="${ResponseCode}" test="eq">
					<Value>301</Value>
				</Compare>
				<Compare variable="${ResponseCode}" test="eq">
					<Value>302</Value>
				</Compare>
			</TestCriteria>
			<TestCriteria type="failure">
				<Compare variable="${ResponseCode}" test="eq">
					<Value>401</Value>
				</Compare>
			</TestCriteria>
			<TestCriteria type="precondition"><Compare variable="${ResponseCode}" test="eq"><Value>401</Value></Compare></TestCriteria></Step>
	</Connection>
	<Variable name="path" type="string">
		<Description>script path</Description>
		<Item encoding="Text">test</Item></Variable>
	<Variable name="Username" type="string">
		<Description>list of users</Description>
		<Item encoding="Text">test</Item></Variable>
	<Variable name="Password" type="string">
		<Description>list of passwords</Description>
		<Item encoding="Text">test</Item></Variable>
</WebApplicationTest>
