<?xml version="1.0" standalone="no"?>
<WebApplicationTest>
	<TestDescription name="PHP session.use_trans_sid enabled" version="0.1" released="20080307" updated="20140314" protocol="FTP" mayproxy="false" affects="server" severity="medium" alert="success" type="Configuration">
		<WASPDescription BindAlertToFile="0" CrawlerProcessingMode="ParseOnly" TargetFormat="" Target="" ModuleName="" Request="" Response="" FullResponse="" DetailsFormat="" Details="" AuthType="0" AuthName="" AuthPass="" CompInfo="" DetaliedInformation="" AlertTags="configuration" CVE="" CWE="CWE-16" CVSSVer="2.0" CVSSScore="0.0" CVSSDescr="AV:N/AC:L/Au:N/C:N/I:N/A:N" CVSSScoreTemp="0.0" CVSSScoreEnv="0.0"/>
		<Copyright></Copyright>
		<Description>When use_trans_sid is enabled, PHP will pass the session ID via the URL. This makes the application more vulnerable to session hijacking attacks. Session hijacking is basically a form of identity theft wherein a hacker impersonates a legitimate user by stealing his session ID. When the session token is transmitted in a cookie, and the request is made on a secure channel (that is, it uses SSL), the token is secure.</Description>
		<ApplicableTo>
			<Platform>
				<OS>*</OS>
				<Arch>*</Arch>
			</Platform>
			<WebServer>*</WebServer>
			<ApplicationServer>*</ApplicationServer>
		</ApplicableTo>
		<Impact>Application dependant - possible session hijacking.</Impact>
		<Recommendation>You can disable session.use_trans_sid from php.ini or .htaccess.[break][break][bold]php.ini[/bold][break]session.use_trans_sid = 'off'[break][break][bold].htaccess[/bold][break]php_flag  session.use_trans_sid off[break]</Recommendation>
		<Reference database="Runtime Configuration" URL="http://www.php.net/session.configuration"/></TestDescription>
</WebApplicationTest>
