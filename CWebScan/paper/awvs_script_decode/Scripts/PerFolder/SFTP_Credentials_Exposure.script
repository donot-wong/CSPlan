#include helpers.inc;
#include string_helpers.inc;
#include constants.inc;
var variants = [
				"sftp-config.json",
				"recentservers.xml"
				];
//--------------------------------------------------------------------------------------------------------
function alert(uri, newUri, job, matchedText)
{	
	var ri = new TReportItem();
	ri.LoadFromFile("SFTP_Credentials_Exposure.xml");
	ri.affects = newUri;
	ri.alertPath = "Scripts/SFTP_Credentials_Exposure.xml";	
	
	ri.Details = "";
	
	if (matchedText) 
		ri.Details =  "[break]Pattern found: [pre][blue]" + matchedText + "[/blue][/pre]";		
			
	ri.setHttpInfo(job);
	AddReportItem(ri);	
}
//--------------------------------------------------------------------------------------------------------
var dir = getCurrentDirectory(); // this is the sitefile
if (dir.isMarkedAs(MARKED_AS_RealDir) && dir.response.msg2 == 200) {
	for (var i=0; i<variants.length; i++) {
		
		var dirName = dir.fullPath;
		if (dirName.charAt(dirName.length-1) != '/') dirName = dirName + '/';
		
		var testURI = dirName + variants[i];
		var http = new THTTPJob();
		http.url = dir.url;
		http.verb = 'GET';
		http.URI = testURI;
		http.execute();
		if (!http.wasError && !http.notFound){
			// look for sftp_config.json
			var m = /("type":[\s\S]*?"host":[\s\S]*?"user":[\s\S]*?"password":[\s\S]*")/.exec(http.response.body);	
			if (m && m[1])	
            {
				alert(dir.fullPath, testURI, http, m[1]);
            }
            else {
				// look also for filezilla
				var m = /(<Pass>[\s\S]*?<\/Pass>)/.exec(http.response.body);	
				if (m && m[1])	
	            {
					alert(dir.fullPath, testURI, http, m[1]);
	            }
            }
		}
	}
}