#include helpers.inc;
#include debug_helpers.inc;
#include classMatches.inc;
var credentials = 
	[
		['tomcat', ''], ['tomcat', 'tomcat'],
		['manager', 'manager'], 
		['admin', ''], ['admin', 'admin'], ['admin', 'password'], ['password', 'password'], 
		['ADMIN', 'ADMIN'], 
		['root', ''], ['root', 'tomcat'], 
	
		['j2deployer', 'j2deployer'], 
		['ovwebusr', 'OvW*busr1'], 
		['cxsdk', 'kdsxc']
	]
// add hostname as part of the credentials	
var host = extractHostForCredentials();
if (host) {
	credentials.push([host, host]);	
	credentials.push([host, "admin"]);	
	credentials.push([host, "tomcat"]);	
	credentials.push([host, ""]);
}
// **************************************************************************************							 
function alert(fname, username, password)
{	
	var ri = new TReportItem();
	ri.LoadFromFile(fname);
	ri.affects = "Web Server";
	ri.alertPath = "Scripts/" + fname; 	
		
	ri.setHttpInfo(lastJob);
	
	ri.details = "Username: [bold][dark]" + username + "[/dark][/bold], Password: [bold][dark]" + password + "[/dark][/bold]";
	
	AddReportItem(ri);	
}							 
// **************************************************************************************							 
function tomcatDetected()
{
	lastJob = new THTTPJob();
		
	lastJob.url = scanURL;
	lastJob.addCookies = false;
	lastJob.verb = 'GET';
	lastJob.URI = '/manager/html/';
	lastJob.autoAuthenticate = false;
	lastJob.execute();	
	if (!lastJob.wasError && (lastJob.response.msg2 == 401 || lastJob.response.msg2 == 403))
	{
		return scanURL.port;
	}
	
	// not detected
	// test again on port 8080
	if (scanURL.port != 8080) {	
		
		lastJob = new THTTPJob();
		lastJob.url = scanURL;
		lastJob.url.port = 8080;
		lastJob.addCookies = false;
		lastJob.verb = 'GET';
		lastJob.URI = '/manager/html/';
		lastJob.autoAuthenticate = false;
		lastJob.execute();	
		if (!lastJob.wasError && (lastJob.response.msg2 == 401 || lastJob.response.msg2 == 403))
		{
			return lastJob.url.port;
		}
	}	
	
	return false;
}
// **************************************************************************************							 
function request(uri, user, pass, port)
{
	lastJob = new THTTPJob();
		
	lastJob.url = scanURL;
	
	if (port)
		lastJob.url.port = port;
	
	lastJob.verb = 'GET';
	lastJob.URI = uri;
	lastJob.autoAuthenticate = false;
	lastJob.request.addHeader('Authorization', 'Basic ' + plain2b64(user + ":" + pass), true);
	lastJob.execute();	
	if (!lastJob.wasError && lastJob.response.msg2 == 200)
	{
		return true;
	}	
	
	return false;
}
// **************************************************************************************
function testAuth(port)
{
	var urls = [
					"/manager/html/",
					"/manager/status/"
				];
	
	matches.plainArray = [
						
					  ];
	
	matches.regexArray = [
					  ];	
	
	var vxml = "Apache_Tomcat_insecure_default_administrative_password.xml"; 
	
	for (var i=0;i<urls.length;i++)
	{ 	
		for (var j=0;j<credentials.length;j++) {
			username = credentials[j][0];
			password = credentials[j][1];
		
			// test credentials	
			if (request(urls[i], username, password, port) && lastJob.response.body.indexOf('Tomcat Web Application Manager') != -1)
			{
				alert(vxml, username, password); 	
				break;
			}
		}
	}
}
// **************************************************************************************	
function startTesting()
{
	// check if tomcat admin page is available
	tomcatPort = tomcatDetected();
	if (tomcatPort > 0) {
		//trace("tomcat detected on port " + tomcatPort);
		testAuth(tomcatPort);
	}
}
/***********************************************************************************/
/* main entry point */
var matches = new classMatches();
var lastJob = null;
startTesting();
